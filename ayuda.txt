static void	push(t_list **src, t_list **dest)
{
	t_list	*aux;
	t_list	*newnode;

	newnode = ft_lstnew((*src)->num);
	newnode -> next = *dest;
	*dest = newnode;
	aux = *src;
	*src = (*src)-> next;
	free(aux);
}

void	pa(t_list **stack_a, t_list **stack_b)
{
	push(stack_b, stack_a);
	ft_putstr("pa\n");
}

void	pb(t_list **stack_a, t_list **stack_b)
{
	push(stack_a, stack_b);
	ft_putstr("pb\n");
}

static void	reverse_rotate(t_list **stack)
{
	t_list	*last;
	t_list	*current;

	last = ft_lstlast(*stack);
	current = *stack;
	while (current->next != last)
		current = current->next;
	current->next = NULL;
	last->next = *stack;
	*stack = last;
}

void	rra(t_list **stack_a)
{
	reverse_rotate(stack_a);
	ft_putstr("rra\n");
}

void	rrb(t_list **stack_b)
{
	reverse_rotate(stack_b);
	ft_putstr("rrb\n");
}

void	rrr(t_list **stack_a, t_list **stack_b)
{
	reverse_rotate(stack_a);
	reverse_rotate(stack_b);
	ft_putstr("rrr\n");
}

static void	rotate(t_list **stack)
{
	t_list	*last;

	last = ft_lstlast(*stack);
	last -> next = (*stack);
	*stack = (*stack)-> next;
	last -> next -> next = NULL;
}

void	ra(t_list **stack_a)
{
	rotate(stack_a);
	ft_putstr("ra\n");
}

void	rb(t_list **stack_b)
{
	rotate(stack_b);
	ft_putstr("rb\n");
}

void	rr(t_list **stack_a, t_list **stack_b)
{
	rotate(stack_a);
	rotate(stack_b);
	ft_putstr("rr\n");
}

static void	swap(t_list **stack)
{
	t_list	*aux;

	aux = *stack;
	*stack = (*stack)->next;
	aux->next = (*stack)->next;
	(*stack)->next = aux;
}

void	sa(t_list **stack_a)
{
	swap(stack_a);
	ft_putstr("sa\n");
}

void	sb(t_list **stack_b)
{
	swap(stack_b);
	ft_putstr("sb\n");
}

void	ss(t_list **stack_a, t_list **stack_b)
{
	swap(stack_a);
	swap(stack_b);
	ft_putstr("ss\n");
}
